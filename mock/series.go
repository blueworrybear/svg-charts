// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/blueworrybear/svg-charts/core (interfaces: Series)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSeries is a mock of Series interface
type MockSeries struct {
	ctrl     *gomock.Controller
	recorder *MockSeriesMockRecorder
}

// MockSeriesMockRecorder is the mock recorder for MockSeries
type MockSeriesMockRecorder struct {
	mock *MockSeries
}

// NewMockSeries creates a new mock instance
func NewMockSeries(ctrl *gomock.Controller) *MockSeries {
	mock := &MockSeries{ctrl: ctrl}
	mock.recorder = &MockSeriesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSeries) EXPECT() *MockSeriesMockRecorder {
	return m.recorder
}

// Data mocks base method
func (m *MockSeries) Data() []interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Data")
	ret0, _ := ret[0].([]interface{})
	return ret0
}

// Data indicates an expected call of Data
func (mr *MockSeriesMockRecorder) Data() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Data", reflect.TypeOf((*MockSeries)(nil).Data))
}

// Name mocks base method
func (m *MockSeries) Name() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Name")
	ret0, _ := ret[0].(string)
	return ret0
}

// Name indicates an expected call of Name
func (mr *MockSeriesMockRecorder) Name() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Name", reflect.TypeOf((*MockSeries)(nil).Name))
}
