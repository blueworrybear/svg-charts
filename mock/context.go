// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/blueworrybear/svg-charts/core (interfaces: Context)

// Package mock is a generated GoMock package.
package mock

import (
	core "github.com/blueworrybear/svg-charts/core"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockContext is a mock of Context interface
type MockContext struct {
	ctrl     *gomock.Controller
	recorder *MockContextMockRecorder
}

// MockContextMockRecorder is the mock recorder for MockContext
type MockContextMockRecorder struct {
	mock *MockContext
}

// NewMockContext creates a new mock instance
func NewMockContext(ctrl *gomock.Controller) *MockContext {
	mock := &MockContext{ctrl: ctrl}
	mock.recorder = &MockContextMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockContext) EXPECT() *MockContextMockRecorder {
	return m.recorder
}

// Config mocks base method
func (m *MockContext) Config() core.Config {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Config")
	ret0, _ := ret[0].(core.Config)
	return ret0
}

// Config indicates an expected call of Config
func (mr *MockContextMockRecorder) Config() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Config", reflect.TypeOf((*MockContext)(nil).Config))
}

// Series mocks base method
func (m *MockContext) Series() core.Series {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Series")
	ret0, _ := ret[0].(core.Series)
	return ret0
}

// Series indicates an expected call of Series
func (mr *MockContextMockRecorder) Series() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Series", reflect.TypeOf((*MockContext)(nil).Series))
}
